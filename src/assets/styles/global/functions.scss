@mixin mobile {
    @media screen and (max-width: 575px) {
        @content;
    }
}

@mixin tablet {
    @media screen and (min-width: 576px) and (max-width: 991px) {
        @content;
    }
}

@mixin desktop {
    @media screen and (min-width: 992px) {
        @content;
    }
}

@mixin dontSelectText() {
    // iOS Safari
    -webkit-touch-callout: none; 
    // Safari
    -webkit-user-select: none; 
    // Konqueror HTML
    -khtml-user-select: none; 
    // Old versions of Firefox
    -moz-user-select: none; 
    // Internet Explorer/Edge
    -ms-user-select: none; 
    user-select: none;
}

@mixin cursorHover() {
    @include customHover {
        cursor: pointer;
    }
}

@mixin hover() {
    transition: opacity var(--transitionTime);
    
    @include cursorHover();
    @include customHover {
        opacity: 0.7;
    }
}

@mixin customHover {
    &:not([disabled]):hover {
        @content;
    }
}

@mixin disabled() {
    cursor: default !important;
    opacity: 0.5 !important;
}

@mixin selectText {
    // firefox
    &::-moz-selection {
        @content;
    }

    &::selection {
        @content;
    }
}

@mixin placeholder {
     // Chrome/Opera/Safari
     &::-webkit-input-placeholder {
        @content;
    }

    // Firefox 19+
    &::-moz-placeholder {
        @content;
    }
    
    // IE 10+
    &:-ms-input-placeholder {
        @content;
    }
    
    // Firefox 18-
    &:-moz-placeholder {
        @content;
    }
}

@mixin scrollBar($size: 5px) {
    &::-webkit-scrollbar {
        // for horizontal scroll bar
        height: $size;
        // for vertical scroll bar
        width: $size;
    }

    &::-webkit-scrollbar-track {
        background: transparent; 
    }
    
    &::-webkit-scrollbar-thumb {
        background: #888; 
        border-radius: 10px;

        &:hover {
            background: #555; 
            cursor: default;
        }
    }
}

@mixin outlineFocus($color: currentColor) {
    outline: 3px solid $color;
    outline-offset: 1px;
}

@mixin buttonFocus($color: currentColor) {
    @include customFocusVisible {
        @include outlineFocus($color);
    }
}

@mixin customFocus {
    &:not([disabled]):focus {
        @content;
    }
}

/** 
 * Will not focus on click but only on tab focus
 */
@mixin customFocusVisible {
    &:not([disabled]):focus-visible {
        @content;
    }
}

@mixin customDisabled {
    &[disabled] {
        @content;
    }
}

@mixin flexCenter() {
    align-items: center;
    display: flex;
    justify-content: center;
}

@mixin buttonOutline($color, $hoverColor: white) {
    background-color: $hoverColor;
    border: 1px solid $color;
    color: $color;
    transition: var(--transitionTime);

    @include customHover {
        background-color: $color;
        border-color: $hoverColor;
        color: $hoverColor;
    }
}


@mixin buttonContained($color: white, $hoverColor: var(--matteBlueLight)) {
    background-color: $hoverColor;
    color: $color;
    
    @include hover();
    @include buttonFocus(var(--accentColor));
}

@mixin scale($x, $y) {
    -moz-transform: scale($x, $y);
    -webkit-transform: scale($x, $y);
    -o-transform: scale($x, $y);
    -ms-transform: scale($x, $y);
    transform: scale($x, $y);
}