name: code_notes_frontend


run-name: ${{ github.event.head_commit.message }}
on: 
  push:
    branches:
      - dev
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: npm i
      - run: npx tsc -b
      - run: npm run build
        env: 
            # don't fail on build warnings
            CI: ""

  push_to_DockerHub:
    # NOTE: ${{}} syntax does not work here
    if: (github.head_ref || github.ref_name) == 'main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository 
        uses: actions/checkout@v4
  
      - name: move .env vars to pipeline
        run: |
          echo $(cat .env | grep '^REACT_APP_VERSION=.*$') >> $GITHUB_ENV
          echo $(cat .env | grep '^NODE_VERSION=.*$') >> $GITHUB_ENV
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v6.10.0
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/code_notes_frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/code_notes_frontend:${{env.REACT_APP_VERSION}}
          build-args: |
            NODE_VERSION=${{env.NODE_VERSION}}

  deploy_to_server:
    runs-on: ubuntu-latest
    needs: push_to_DockerHub

    steps:
        # connect to vpn
      - name: Checkout repository 
        uses: actions/checkout@v4
      - name: Install OpenVPN
        run: |
            sudo apt update
            sudo apt install -y openvpn openvpn-systemd-resolved
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v3"
        with:
            config_file: .github/workflows/config.ovpn
            client_key: ${{ secrets.OPEN_VPN_PRIVATE_KEY }}

      - uses: appleboy/ssh-action@v1.2.0
        with: 
          host: ${{ vars.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          debug: true
          script: |
            docker compose -f './${{ vars.SSH_TARGET_FOLDER }}/docker-compose.yml' pull frontend
            yes | docker rm $(docker container ls --all --filter=ancestor=$(docker images -f "dangling=true" -q) --format "{{.ID}}") --force
            yes | docker image rm $(docker images -f "dangling=true" -q)
            docker compose -f './${{ vars.SSH_TARGET_FOLDER }}/docker-compose.yml' up frontend -d
            yes | docker volume prune